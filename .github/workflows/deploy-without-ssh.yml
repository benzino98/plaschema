name: Deploy to Shared Hosting (No SSH)

on:
  push:
    branches: [main]
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, intl, gd, xml, zip, dom, fileinfo, curl
          coverage: none

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "plas-app/package-lock.json"

      - name: Install Composer Dependencies
        working-directory: ./plas-app
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Install NPM Dependencies
        working-directory: ./plas-app
        run: npm ci

      - name: Build Frontend Assets
        working-directory: ./plas-app
        run: npm run build

      - name: Generate .env file
        working-directory: ./plas-app
        run: |
          cp .env.example .env
          sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env
          php artisan key:generate
          # Make sure the .env file is readable
          chmod 644 .env
          cat .env | grep APP_  # Display APP settings for verification

      # Pre-generate cache files locally
      - name: Pre-generate cache files
        working-directory: ./plas-app
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      # Create necessary directories that might be missing
      - name: Create necessary directories
        working-directory: ./plas-app
        run: |
          mkdir -p storage/framework/cache
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p storage/logs
          chmod -R 775 storage bootstrap/cache

      # Prepare deployment structure
      - name: Prepare deployment structure
        run: |
          # Create a deployment directory
          mkdir -p deployment

          # Copy the Laravel application to the root deployment directory
          mkdir -p deployment/root
          cp -r plas-app/* deployment/root/
          # Remove public directory from root folder since we'll deploy it separately
          rm -rf deployment/root/public

          # Create public_html directory
          mkdir -p deployment/public_html

          # Copy only the public directory contents to public_html
          cp -r plas-app/public/* deployment/public_html/

          # Update the index.php to point to the correct paths (root directory instead of laravel subdirectory)
          sed -i "s|/../../laravel/vendor/autoload.php|/../vendor/autoload.php|g" deployment/public_html/index.php
          sed -i "s|/../../laravel/bootstrap/app.php|/../bootstrap/app.php|g" deployment/public_html/index.php

          # Verify .env file exists and is readable
          if [ -f "deployment/root/.env" ]; then
            echo ".env file exists and will be deployed"
            chmod 644 deployment/root/.env
            # Display the first few lines of the .env file (excluding sensitive data)
            head -n 10 deployment/root/.env
          else
            echo "ERROR: .env file is missing in deployment/root/"
            # Create a backup .env file if it's missing
            echo "Creating backup .env file..."
            echo "APP_NAME=Plaschema" > deployment/root/.env
            echo "APP_ENV=production" >> deployment/root/.env
            echo "APP_KEY=base64:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" >> deployment/root/.env
            echo "APP_DEBUG=false" >> deployment/root/.env
            echo "APP_URL=https://plaschema.pl.gov.ng" >> deployment/root/.env
            echo "" >> deployment/root/.env
            echo "LOG_CHANNEL=stack" >> deployment/root/.env
            echo "LOG_DEPRECATIONS_CHANNEL=null" >> deployment/root/.env
            echo "LOG_LEVEL=debug" >> deployment/root/.env
            echo "" >> deployment/root/.env
            echo "DB_CONNECTION=mysql" >> deployment/root/.env
            echo "DB_HOST=127.0.0.1" >> deployment/root/.env
            echo "DB_PORT=3306" >> deployment/root/.env
            echo "DB_DATABASE=plaschem_db" >> deployment/root/.env
            echo "DB_USERNAME=plaschem_user" >> deployment/root/.env
            echo "DB_PASSWORD=" >> deployment/root/.env
            echo "" >> deployment/root/.env
            echo "BROADCAST_DRIVER=log" >> deployment/root/.env
            echo "CACHE_DRIVER=file" >> deployment/root/.env
            echo "FILESYSTEM_DISK=local" >> deployment/root/.env
            echo "QUEUE_CONNECTION=sync" >> deployment/root/.env
            echo "SESSION_DRIVER=file" >> deployment/root/.env
            echo "SESSION_LIFETIME=120" >> deployment/root/.env
            chmod 644 deployment/root/.env
            echo "Backup .env file created."
          fi

          # Display the structure for verification
          echo "Deployment structure prepared:"
          find deployment -type d | sort
          ls -la deployment/root/ | grep -E "\.env|artisan"

      # Copy initialization file to public_html
      - name: Copy initialization file to public_html
        run: |
          cp plas-app/public/initialize_deployment.php deployment/public_html/
          chmod 644 deployment/public_html/initialize_deployment.php

          # Also copy the structure creator script for first-time setup
          cp plas-app/public/create_laravel_structure.php deployment/public_html/
          chmod 644 deployment/public_html/create_laravel_structure.php

          # Copy the .env file creator script
          cp plas-app/public/fix_env_file.php deployment/public_html/
          chmod 644 deployment/public_html/fix_env_file.php

      # Deploy Laravel core files
      - name: Deploy Laravel core files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deployment/root/
          server-dir: ./
          dangerous-clean-slate: false # Changed to false to preserve existing files if any
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/tests/**
            **/.github/**

      # Deploy public files
      - name: Deploy public files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deployment/public_html/
          server-dir: public_html/
          dangerous-clean-slate: false # Changed to false to preserve existing files if any

      - name: Post-deployment notification
        run: |
          echo "Deployment completed!"
          echo "IMPORTANT: Visit https://plaschema.pl.gov.ng/initialize_deployment.php in your browser to complete the setup."
          echo "Laravel core files deployed to: ./ (root directory)"
          echo "Public files deployed to: public_html/ (in your home directory)"
